{"version":3,"sources":["../src/index.ts","../src/utils/index.ts","../src/components/TableLoadMore.tsx","../src/utils/internal.ts","../src/components/Table/Data.tsx","../src/components/Table/Basic.tsx"],"sourcesContent":["export * from './utils/index';\nexport * from './utils/types';\nexport * from './components';\n","import { createStore } from 'zustand';\r\n\r\nimport type { TableStore, HandleCreateTableStoreProps } from './types';\r\nimport { useRef, useId, useMemo } from 'react';\r\n\r\nexport const handleCreateTableStore = <TData extends Record<string, unknown>>({\r\n\tclassNames = {},\r\n\tpageViewMode = 'PAGING',\r\n\tcanMultiRowSelect = false,\r\n\ttableAutoToFixedOnLoad = false,\r\n\tcolumnVisibility = {},\r\n\tbaseId = '',\r\n\tpageSize,\r\n}: HandleCreateTableStoreProps) =>\r\n\tcreateStore<TableStore<TData>>((set) => ({\r\n\t\ttable: null,\r\n\t\tbaseId,\r\n\r\n\t\tpageIndex: 0,\r\n\t\tpageSize,\r\n\t\tclassNames,\r\n\t\tpageViewMode,\r\n\t\tcanMultiRowSelect,\r\n\t\ttableAutoToFixedOnLoad,\r\n\r\n\t\tcolumnFilters: [],\r\n\t\trowSelection: {},\r\n\t\tcolumnVisibility,\r\n\t\tsorting: [],\r\n\r\n\t\tutils: {\r\n\t\t\tsetPagination: (updaterOrValue) =>\r\n\t\t\t\tset((prevData) => ({\r\n\t\t\t\t\t...(typeof updaterOrValue === 'function'\r\n\t\t\t\t\t\t? updaterOrValue({\r\n\t\t\t\t\t\t\t\tpageIndex: prevData.pageIndex,\r\n\t\t\t\t\t\t\t\tpageSize: prevData.pageSize,\r\n\t\t\t\t\t\t  })\r\n\t\t\t\t\t\t: updaterOrValue),\r\n\t\t\t\t})),\r\n\t\t\tsetPageIndex: (updaterOrValue) =>\r\n\t\t\t\tset((prevData) => ({\r\n\t\t\t\t\tpageIndex:\r\n\t\t\t\t\t\ttypeof updaterOrValue === 'function'\r\n\t\t\t\t\t\t\t? updaterOrValue(prevData.pageIndex)\r\n\t\t\t\t\t\t\t: updaterOrValue,\r\n\t\t\t\t})),\r\n\t\t\tsetRowSelection: (updaterOrValue) =>\r\n\t\t\t\tset((prevData) => ({\r\n\t\t\t\t\trowSelection:\r\n\t\t\t\t\t\ttypeof updaterOrValue === 'function'\r\n\t\t\t\t\t\t\t? updaterOrValue(prevData.rowSelection)\r\n\t\t\t\t\t\t\t: updaterOrValue,\r\n\t\t\t\t})),\r\n\t\t\tsetColumnFilters: (updaterOrValue) =>\r\n\t\t\t\tset((prevData) => ({\r\n\t\t\t\t\tcolumnFilters:\r\n\t\t\t\t\t\ttypeof updaterOrValue === 'function'\r\n\t\t\t\t\t\t\t? updaterOrValue(prevData.columnFilters)\r\n\t\t\t\t\t\t\t: updaterOrValue,\r\n\t\t\t\t})),\r\n\t\t\tsetColumnVisibility: (updaterOrValue) =>\r\n\t\t\t\tset((prevData) => ({\r\n\t\t\t\t\tcolumnVisibility:\r\n\t\t\t\t\t\ttypeof updaterOrValue === 'function'\r\n\t\t\t\t\t\t\t? updaterOrValue(prevData.columnVisibility)\r\n\t\t\t\t\t\t\t: updaterOrValue,\r\n\t\t\t\t})),\r\n\t\t\tsetSorting: (updaterOrValue) =>\r\n\t\t\t\tset((prevData) => ({\r\n\t\t\t\t\tsorting:\r\n\t\t\t\t\t\ttypeof updaterOrValue === 'function'\r\n\t\t\t\t\t\t\t? updaterOrValue(prevData.sorting)\r\n\t\t\t\t\t\t\t: updaterOrValue,\r\n\t\t\t\t})),\r\n\t\t},\r\n\t}));\r\n\r\nexport const useCreateTableStore = <TData extends Record<string, unknown>>(\r\n\tprops: Omit<HandleCreateTableStoreProps, 'baseId'> & {\r\n\t\tbaseId?: HandleCreateTableStoreProps['baseId'];\r\n\t},\r\n) => {\r\n\tconst baseId = useId();\r\n\r\n\tconst storeRef = useRef(\r\n\t\thandleCreateTableStore<TData>({ ...props, baseId: props.baseId || baseId }),\r\n\t);\r\n\r\n\tuseMemo(() => {\r\n\t\tif (\r\n\t\t\tstoreRef.current.getState().pageSize !== props.pageSize ||\r\n\t\t\tstoreRef.current.getState().baseId !== props.baseId\r\n\t\t)\r\n\t\t\tstoreRef.current.setState(() => ({\r\n\t\t\t\tpageSize: props.pageSize,\r\n\t\t\t\tbaseId: props.baseId,\r\n\t\t\t}));\r\n\t}, [props.baseId, props.pageSize]);\r\n\r\n\treturn storeRef.current;\r\n};\r\n","import { useMemo } from 'react';\r\nimport { type StoreApi, useStore } from 'zustand';\r\nimport type { InfiniteQuery, TableStore } from '../utils/types';\r\nimport { cx } from '../utils/internal';\r\n\r\nconst TableLoadMore = <TData, TValue>({\r\n\tinfiniteQuery,\r\n\tstore,\r\n\tclassNames = {\r\n\t\tcontainer: '',\r\n\t\tloadMoreButton: '',\r\n\t},\r\n}: {\r\n\tinfiniteQuery: InfiniteQuery<TData>;\r\n\tstore: StoreApi<TableStore<TValue>>;\r\n\tclassNames?: {\r\n\t\tcontainer: string;\r\n\t\tloadMoreButton: string;\r\n\t};\r\n}) => {\r\n\tconst pageIndex = useStore(store, (state) => state.pageIndex);\r\n\r\n\tconst storeUtils = useStore(store, (state) => state.utils);\r\n\r\n\tconst { isLastPageEmpty, isInBeforeLastPage } = useMemo(() => {\r\n\t\tconst isLastPageEmpty =\r\n\t\t\tinfiniteQuery?.data?.pages?.[infiniteQuery.data.pages.length - 1]?.items\r\n\t\t\t\t.length === 0;\r\n\r\n\t\tconst isInFirstPage = pageIndex === 0;\r\n\t\tconst isInLastPage = pageIndex + 1 === infiniteQuery?.data?.pages?.length;\r\n\t\tconst isInBeforeLastPage =\r\n\t\t\ttypeof infiniteQuery?.data?.pages?.length === 'number' &&\r\n\t\t\tinfiniteQuery.data.pages.length !== 0 &&\r\n\t\t\tpageIndex + 1 === infiniteQuery.data.pages.length - 1;\r\n\r\n\t\tlet pagesLength = infiniteQuery?.data?.pages?.length || 0;\r\n\t\tif (isLastPageEmpty && pagesLength !== 0) pagesLength--;\r\n\t\treturn {\r\n\t\t\tisLastPageEmpty,\r\n\t\t\tisInBeforeLastPage,\r\n\t\t\tisInLastPage,\r\n\t\t\tisInFirstPage,\r\n\t\t\tpagesLength,\r\n\t\t};\r\n\t}, [pageIndex, infiniteQuery?.data?.pages]);\r\n\r\n\tconst isLoadMoreButtonDisabled = useMemo(\r\n\t\t() =>\r\n\t\t\t(!infiniteQuery.hasNextPage &&\r\n\t\t\t\tpageIndex + 1 === infiniteQuery.data?.pages.length) ||\r\n\t\t\tinfiniteQuery.isFetching ||\r\n\t\t\t(isInBeforeLastPage && isLastPageEmpty),\r\n\t\t[\r\n\t\t\tpageIndex,\r\n\t\t\tinfiniteQuery.data?.pages.length,\r\n\t\t\tinfiniteQuery.hasNextPage,\r\n\t\t\tinfiniteQuery.isFetching,\r\n\t\t\tisInBeforeLastPage,\r\n\t\t\tisLastPageEmpty,\r\n\t\t],\r\n\t);\r\n\r\n\tif (!infiniteQuery.hasNextPage) return <></>;\r\n\r\n\treturn (\r\n\t\t<div className={cx(classNames?.container)}>\r\n\t\t\t<button\r\n\t\t\t\ttitle={\r\n\t\t\t\t\tisLoadMoreButtonDisabled ? 'There is no more next page' : 'Next page'\r\n\t\t\t\t}\r\n\t\t\t\tdisabled={isLoadMoreButtonDisabled}\r\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-misused-promises\r\n\t\t\t\tonClick={async () => {\r\n\t\t\t\t\tif (isLoadMoreButtonDisabled) return;\r\n\r\n\t\t\t\t\tawait infiniteQuery.fetchNextPage().then((res) => {\r\n\t\t\t\t\t\tif (res.data && Array.isArray(res.data?.pages)) {\r\n\t\t\t\t\t\t\tconst lastPage = res.data.pages[res.data.pages.length - 1];\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t!lastPage ||\r\n\t\t\t\t\t\t\t\t(isInBeforeLastPage && lastPage.items.length === 0)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tstoreUtils.setPageIndex((pageIndex) => pageIndex + 1);\r\n\t\t\t\t\t});\r\n\t\t\t\t}}\r\n\t\t\t\tclassName={cx(classNames?.loadMoreButton)}\r\n\t\t\t\t// eslint-disable-next-line react/no-children-prop\r\n\t\t\t\tchildren='load more'\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TableLoadMore;\r\n","export const cx = (...classesArr: (string | undefined)[]) => {\r\n\tlet classesStr = '';\r\n\tlet className: string | undefined;\r\n\tfor (className of classesArr) {\r\n\t\tif (typeof className === 'string') classesStr += className + ' ';\r\n\t}\r\n\r\n\treturn classesStr.trimEnd();\r\n};\r\n","import { type HTMLProps, useEffect, useMemo, useRef } from 'react';\r\nimport {\r\n\tflexRender,\r\n\tgetCoreRowModel,\r\n\tgetFilteredRowModel,\r\n\tgetPaginationRowModel,\r\n\tgetSortedRowModel,\r\n\tuseReactTable,\r\n} from '@tanstack/react-table';\r\nimport {\r\n\tTable,\r\n\tTableBody,\r\n\tTableCell,\r\n\tTableHead,\r\n\tTableHeader,\r\n\tTableRow,\r\n} from './Basic';\r\nimport { useStore } from 'zustand';\r\nimport {\r\n\ttype CustomTableHeaderProps,\r\n\ttype CustomTableBodyProps,\r\n\ttype DataTableProps,\r\n} from '../../utils/types';\r\nimport { cx } from '../../utils/internal';\r\n\r\nconst CustomTableHeader = <TData,>({\r\n\ttable,\r\n\tstore,\r\n}: CustomTableHeaderProps<TData>) => {\r\n\tconst classNames = useStore(store, (store) => store.classNames.thead);\r\n\r\n\treturn (\r\n\t\t<TableHeader className={classNames?._}>\r\n\t\t\t{table.getHeaderGroups().map((headerGroup) => (\r\n\t\t\t\t<TableRow key={headerGroup.id} className={classNames?.tr}>\r\n\t\t\t\t\t{headerGroup.headers.map((header) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<TableHead\r\n\t\t\t\t\t\t\t\tkey={header.id}\r\n\t\t\t\t\t\t\t\tclassName={cx(\r\n\t\t\t\t\t\t\t\t\theader.id === 'select'\r\n\t\t\t\t\t\t\t\t\t\t? 'data-[select-th=\"true\"]'\r\n\t\t\t\t\t\t\t\t\t\t: undefined,\r\n\t\t\t\t\t\t\t\t\tclassNames?.th?._,\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{header.isPlaceholder\r\n\t\t\t\t\t\t\t\t\t? null\r\n\t\t\t\t\t\t\t\t\t: flexRender(\r\n\t\t\t\t\t\t\t\t\t\t\theader.column.columnDef.header,\r\n\t\t\t\t\t\t\t\t\t\t\theader.getContext(),\r\n\t\t\t\t\t\t\t\t\t  )}\r\n\t\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</TableRow>\r\n\t\t\t))}\r\n\t\t</TableHeader>\r\n\t);\r\n};\r\n\r\nconst CustomTableBody = <TData,>({\r\n\ttable,\r\n\tcolumnsLength,\r\n\tstore,\r\n}: CustomTableBodyProps<TData>) => {\r\n\tconst classNames = useStore(store, (store) => store.classNames.tbody);\r\n\r\n\treturn (\r\n\t\t<TableBody\r\n\t\t\tclassName={classNames?._}\r\n\t\t\tdata-state={table.getRowModel().rows?.length > 0 ? undefined : 'empty'}\r\n\t\t>\r\n\t\t\t{table.getRowModel().rows?.length > 0 ? (\r\n\t\t\t\ttable.getRowModel().rows.map((row) => (\r\n\t\t\t\t\t<TableRow\r\n\t\t\t\t\t\tkey={row.id}\r\n\t\t\t\t\t\tdata-state={row.getIsSelected() && 'selected'}\r\n\t\t\t\t\t\tclassName={classNames?.tr}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{row.getVisibleCells().map((cell) => (\r\n\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\tkey={cell.id}\r\n\t\t\t\t\t\t\t\tclassName={cx(\r\n\t\t\t\t\t\t\t\t\tcell.id === 'select' ? 'data-[select-th=\"true\"]' : undefined,\r\n\t\t\t\t\t\t\t\t\tclassNames?.td?._,\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</TableRow>\r\n\t\t\t\t))\r\n\t\t\t) : (\r\n\t\t\t\t<TableRow data-state='empty'>\r\n\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\tcolSpan={columnsLength}\r\n\t\t\t\t\t\tdata-state='empty'\r\n\t\t\t\t\t\tclassName='h-24 text-center'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tNo results.\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t</TableRow>\r\n\t\t\t)}\r\n\t\t</TableBody>\r\n\t);\r\n};\r\n\r\nconst IndeterminateCheckbox = ({\r\n\tindeterminate,\r\n\tclassName = '',\r\n\t...props\r\n}: { indeterminate?: boolean } & HTMLProps<HTMLInputElement>) => {\r\n\tconst ref = useRef<HTMLInputElement>(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!ref.current) return;\r\n\r\n\t\tif (typeof indeterminate === 'boolean') {\r\n\t\t\tref.current.indeterminate = !props.checked && indeterminate;\r\n\t\t}\r\n\t}, [indeterminate, props.checked]);\r\n\r\n\treturn <input type='checkbox' ref={ref} className={className} {...props} />;\r\n};\r\n\r\nconst QueryTable = <TData, TValue>({\r\n\tcolumns,\r\n\tstore,\r\n\tinfiniteQuery,\r\n}: DataTableProps<TData, TValue>) => {\r\n\t//\r\n\tconst sorting = useStore(store, (store) => store.sorting);\r\n\tconst columnFilters = useStore(store, (store) => store.columnFilters);\r\n\tconst columnVisibility = useStore(store, (store) => store.columnVisibility);\r\n\tconst rowSelection = useStore(store, (store) => store.rowSelection);\r\n\tconst storeUtils = useStore(store, (store) => store.utils);\r\n\tconst pageViewMode = useStore(store, (state) => state.pageViewMode);\r\n\t//\r\n\tconst pageIndex = useStore(store, (state) => state.pageIndex);\r\n\tconst canMultiRowSelect = useStore(store, (state) => state.canMultiRowSelect);\r\n\r\n\tconst modifiedColumns: typeof columns = useMemo(() => {\r\n\t\treturn [\r\n\t\t\t{\r\n\t\t\t\tid: 'select',\r\n\t\t\t\theader: ({ table }) => (\r\n\t\t\t\t\t<IndeterminateCheckbox\r\n\t\t\t\t\t\tchecked={table.getIsAllRowsSelected()}\r\n\t\t\t\t\t\tindeterminate={table.getIsSomeRowsSelected()}\r\n\t\t\t\t\t\tonChange={table.getToggleAllRowsSelectedHandler()}\r\n\t\t\t\t\t\t// className={cx(classNames.thead?.th?.checkboxContainer?.checkBox)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t),\r\n\t\t\t\tcell: ({ row }) => (\r\n\t\t\t\t\t<IndeterminateCheckbox\r\n\t\t\t\t\t\tchecked={row.getIsSelected()}\r\n\t\t\t\t\t\tindeterminate={row.getIsSomeSelected()}\r\n\t\t\t\t\t\tonChange={row.getToggleSelectedHandler()}\r\n\t\t\t\t\t\t// className={cx(classNames.tbody?.td?.checkboxContainer?.checkBox)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t),\r\n\t\t\t\tenableSorting: false,\r\n\t\t\t\tenableHiding: canMultiRowSelect,\r\n\t\t\t},\r\n\t\t\t...columns,\r\n\t\t];\r\n\t}, [columns, canMultiRowSelect]);\r\n\r\n\tconst defaultPage = useMemo(() => [], []);\r\n\tconst currentPage = useMemo(() => {\r\n\t\tif (pageViewMode === 'INFINITE_SCROLL')\r\n\t\t\treturn (infiniteQuery?.data?.pages || defaultPage)\r\n\t\t\t\t.map((page) => page.items)\r\n\t\t\t\t.flat(1);\r\n\r\n\t\treturn infiniteQuery?.data?.pages?.[pageIndex]?.items || defaultPage;\r\n\t}, [pageIndex, infiniteQuery.data?.pages, pageViewMode, defaultPage]);\r\n\r\n\tconst pagination = useMemo(\r\n\t\t() => ({\r\n\t\t\tpageIndex,\r\n\t\t\tpageSize: infiniteQuery?.data?.pages.length || 0,\r\n\t\t}),\r\n\t\t[pageIndex, infiniteQuery?.data?.pages.length],\r\n\t);\r\n\r\n\tconst table = useReactTable({\r\n\t\tdata: currentPage,\r\n\t\tcolumns: modifiedColumns,\r\n\t\tonSortingChange: storeUtils.setSorting,\r\n\t\tonColumnFiltersChange: storeUtils.setColumnFilters,\r\n\t\tgetCoreRowModel: getCoreRowModel(),\r\n\t\tgetPaginationRowModel: getPaginationRowModel(),\r\n\t\tgetSortedRowModel: getSortedRowModel(),\r\n\t\tgetFilteredRowModel: getFilteredRowModel(),\r\n\t\tonPaginationChange: storeUtils.setPagination,\r\n\t\tonColumnVisibilityChange: storeUtils.setColumnVisibility,\r\n\t\tonRowSelectionChange: storeUtils.setRowSelection,\r\n\t\tmanualPagination: true,\r\n\t\tmanualFiltering: true,\r\n\t\tmanualSorting: true,\r\n\t\tstate: {\r\n\t\t\tpagination,\r\n\t\t\tsorting,\r\n\t\t\tcolumnFilters,\r\n\t\t\tcolumnVisibility,\r\n\t\t\trowSelection,\r\n\t\t},\r\n\t});\r\n\r\n\tuseMemo(() => store.setState({ table }), [store, table]);\r\n\r\n\treturn (\r\n\t\t<Table>\r\n\t\t\t<CustomTableHeader table={table} store={store} />\r\n\t\t\t<CustomTableBody\r\n\t\t\t\ttable={table}\r\n\t\t\t\tcolumnsLength={columns.length}\r\n\t\t\t\tstore={store}\r\n\t\t\t/>\r\n\t\t</Table>\r\n\t);\r\n};\r\n\r\nexport default QueryTable;\r\n","import {\r\n\tforwardRef,\r\n\ttype HTMLAttributes,\r\n\ttype ThHTMLAttributes,\r\n\ttype TdHTMLAttributes,\r\n} from 'react';\r\nimport { cx } from '../../utils/internal';\r\n\r\nconst Table = forwardRef<HTMLTableElement, HTMLAttributes<HTMLTableElement>>(\r\n\t(props, ref) => (\r\n\t\t<table\r\n\t\t\tref={ref}\r\n\t\t\t// className={cx('w-full caption-bottom text-sm', className)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t),\r\n);\r\nTable.displayName = 'Table';\r\n// <div className='w-full overflow-auto'>\r\n// </div>\r\n\r\nconst TableHeader = forwardRef<\r\n\tHTMLTableSectionElement,\r\n\tHTMLAttributes<HTMLTableSectionElement>\r\n>((props, ref) => (\r\n\t<thead\r\n\t\tref={ref}\r\n\t\t// className={cx('[&_tr]:border-b', className)}\r\n\t\t{...props}\r\n\t/>\r\n));\r\nTableHeader.displayName = 'TableHeader';\r\n\r\nconst TableBody = forwardRef<\r\n\tHTMLTableSectionElement,\r\n\tHTMLAttributes<HTMLTableSectionElement>\r\n>((props, ref) => (\r\n\t<tbody\r\n\t\tref={ref}\r\n\t\t// className={cx('[&_tr:last-child]:border-0', className)}\r\n\t\t{...props}\r\n\t/>\r\n));\r\nTableBody.displayName = 'TableBody';\r\n\r\nconst TableFooter = forwardRef<\r\n\tHTMLTableSectionElement,\r\n\tHTMLAttributes<HTMLTableSectionElement>\r\n>((props, ref) => (\r\n\t<tfoot\r\n\t\tref={ref}\r\n\t\t// className={cx('bg-primary text-primary-foreground font-medium', className)}\r\n\t\t{...props}\r\n\t/>\r\n));\r\nTableFooter.displayName = 'TableFooter';\r\n\r\nconst TableRow = forwardRef<\r\n\tHTMLTableRowElement,\r\n\tHTMLAttributes<HTMLTableRowElement>\r\n>((props, ref) => (\r\n\t<tr\r\n\t\tref={ref}\r\n\t\t// className={cx(\r\n\t\t// \t'hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors',\r\n\t\t// \tclassName,\r\n\t\t// )}\r\n\t\t{...props}\r\n\t/>\r\n));\r\nTableRow.displayName = 'TableRow';\r\n\r\nconst TableHead = forwardRef<\r\n\tHTMLTableCellElement,\r\n\tThHTMLAttributes<HTMLTableCellElement>\r\n>((props, ref) => (\r\n\t<th\r\n\t\tref={ref}\r\n\t\t// className={cx(\r\n\t\t// \t'text-muted-foreground h-12 px-4 text-left align-middle font-medium [&:has([role=checkbox])]:pr-0',\r\n\t\t// \tclassName,\r\n\t\t// )}\r\n\t\t{...props}\r\n\t/>\r\n));\r\nTableHead.displayName = 'TableHead';\r\n\r\nconst TableCell = forwardRef<\r\n\tHTMLTableCellElement,\r\n\tTdHTMLAttributes<HTMLTableCellElement>\r\n>((props, ref) => <td ref={ref} {...props} />);\r\nTableCell.displayName = 'TableCell';\r\n\r\nconst TableCaption = forwardRef<\r\n\tHTMLTableCaptionElement,\r\n\tHTMLAttributes<HTMLTableCaptionElement>\r\n>(({ className, ...props }, ref) => (\r\n\t<caption\r\n\t\tref={ref}\r\n\t\tclassName={cx('text-muted-foreground mt-4 text-sm', className)}\r\n\t\t{...props}\r\n\t/>\r\n));\r\nTableCaption.displayName = 'TableCaption';\r\n\r\nexport {\r\n\tTable,\r\n\tTableHeader,\r\n\tTableBody,\r\n\tTableFooter,\r\n\tTableHead,\r\n\tTableRow,\r\n\tTableCell,\r\n\tTableCaption,\r\n};\r\n"],"mappings":"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","names":["import_react","import_zustand","isLastPageEmpty","isInBeforeLastPage","pageIndex","import_react","import_react","import_jsx_runtime","import_zustand","import_jsx_runtime","store","table"]}