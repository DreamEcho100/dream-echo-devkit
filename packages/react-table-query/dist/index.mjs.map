{"version":3,"sources":["../src/utils/index.ts","../src/components/TableMetaData.tsx","../src/utils/internal.ts","../src/components/icons/IoIosArrowBack.tsx","../src/components/icons/IoMdRefresh.tsx","../src/components/icons/IoIosArrowForward.tsx","../src/components/TableLoadMore.tsx","../src/CustomTable.tsx","../src/components/Filter.tsx"],"sourcesContent":["import { createStore } from 'zustand';\r\n\r\nimport type { TableStore, TableClassNames, PageViewMode } from './types';\r\nimport { useRef, useEffect } from 'react';\r\n\r\nexport const handleCreateTableStore = <TData extends Record<string, unknown>>({\r\n\tfilterByFormValues = {},\r\n\tclassNames = {},\r\n\tpageViewMode = 'PAGING',\r\n\ttableAutoToFixedOnLoad = false,\r\n}: {\r\n\tfilterByFormValues?: TableStore<TData>['filterByFormValues'];\r\n\tclassNames?: TableClassNames;\r\n\tpageViewMode?: PageViewMode;\r\n\ttableAutoToFixedOnLoad?: boolean;\r\n}) =>\r\n\tcreateStore<TableStore<TData>>((set) => ({\r\n\t\tclassNames,\r\n\t\ttable: null,\r\n\t\tcolumnFilters: [],\r\n\t\trowSelection: {},\r\n\t\tfilterByFormValues,\r\n\t\tdebouncedValue: {},\r\n\t\tcurrentPageIndex: 0,\r\n\t\tremoteFilter: true,\r\n\t\tpageViewMode,\r\n\t\ttableAutoToFixedOnLoad,\r\n\r\n\t\tutils: {\r\n\t\t\tincrementCurrentPageIndex: () =>\r\n\t\t\t\tset((state: TableStore<TData>) => ({\r\n\t\t\t\t\tcurrentPageIndex: state.currentPageIndex + 1,\r\n\t\t\t\t})),\r\n\t\t\tdecrementCurrentPageIndex: () =>\r\n\t\t\t\tset((state: TableStore<TData>) => ({\r\n\t\t\t\t\tcurrentPageIndex: state.currentPageIndex - 1,\r\n\t\t\t\t})),\r\n\t\t\tsetRowSelection: (updaterOrValue) =>\r\n\t\t\t\tset((prevData: TableStore<TData>) => ({\r\n\t\t\t\t\trowSelection:\r\n\t\t\t\t\t\ttypeof updaterOrValue === 'function'\r\n\t\t\t\t\t\t\t? updaterOrValue(prevData.rowSelection)\r\n\t\t\t\t\t\t\t: updaterOrValue,\r\n\t\t\t\t})),\r\n\t\t\tsetColumnFilters: (updaterOrValue) =>\r\n\t\t\t\tset((prevData: TableStore<TData>) => ({\r\n\t\t\t\t\tcolumnFilters:\r\n\t\t\t\t\t\ttypeof updaterOrValue === 'function'\r\n\t\t\t\t\t\t\t? updaterOrValue(prevData.columnFilters)\r\n\t\t\t\t\t\t\t: updaterOrValue,\r\n\t\t\t\t})),\r\n\t\t\tsetFilterByFormValues: (updaterOrValue) =>\r\n\t\t\t\tset((prevData) => ({\r\n\t\t\t\t\tfilterByFormValues: !prevData.filterByFormValues\r\n\t\t\t\t\t\t? prevData.filterByFormValues\r\n\t\t\t\t\t\t: typeof updaterOrValue === 'function'\r\n\t\t\t\t\t\t? updaterOrValue(prevData.filterByFormValues)\r\n\t\t\t\t\t\t: updaterOrValue,\r\n\t\t\t\t})),\r\n\t\t},\r\n\t}));\r\n\r\nexport const useCreateTableStore = <TData extends Record<string, unknown>>(\r\n\tprops: Parameters<typeof handleCreateTableStore<TData>>[0],\r\n) => {\r\n\tconst formStoreRef = useRef(handleCreateTableStore(props));\r\n\tconst configRef = useRef({ counter: 0 });\r\n\r\n\tuseEffect(() => {\r\n\t\tconfigRef.current.counter++;\r\n\r\n\t\tif (configRef.current.counter === 1) return;\r\n\t\tformStoreRef.current = handleCreateTableStore(props);\r\n\t}, [props]);\r\n\r\n\treturn formStoreRef.current;\r\n};\r\n","import { useMemo, useCallback } from 'react';\r\nimport { type StoreApi, useStore } from 'zustand';\r\nimport type { InfiniteQuery, TableStore } from '../utils/types';\r\nimport { cx } from '../utils/internal';\r\nimport IoIosArrowBack from './icons/IoIosArrowBack';\r\nimport IoMdRefresh from './icons/IoMdRefresh';\r\nimport IoIosArrowForward from './icons/IoIosArrowForward';\r\n\r\nconst TableMetaData = <\r\n\tQueryItem extends Record<string, unknown>,\r\n\tTableItem extends Record<\r\n\t\tExclude<string, keyof QueryItem> | keyof QueryItem,\r\n\t\tunknown\r\n\t>,\r\n>({\r\n\tinfiniteQuery,\r\n\tstore,\r\n\tclassNames = {\r\n\t\tcontainer: '',\r\n\t\trefetchButton: '',\r\n\t\tpreviousPageButton: '',\r\n\t\tnextPageButton: '',\r\n\t},\r\n}: {\r\n\tinfiniteQuery: InfiniteQuery<QueryItem>;\r\n\tstore: StoreApi<TableStore<TableItem>>;\r\n\tclassNames?: {\r\n\t\tcontainer: string;\r\n\t\trefetchButton: string;\r\n\t\tpreviousPageButton: string;\r\n\t\tnextPageButton: string;\r\n\t};\r\n}) => {\r\n\tconst currentPageIndex = useStore(store, (state) => state.currentPageIndex);\r\n\r\n\tconst {\r\n\t\tincrementCurrentPageIndex,\r\n\t\tdecrementCurrentPageIndex,\r\n\t\tsetRowSelection,\r\n\t} = useStore(store, (state) => state.utils);\r\n\r\n\tconst {\r\n\t\tisLastPageEmpty,\r\n\t\t// isInLastPage,\r\n\t\tisInBeforeLastPage,\r\n\t\t// isInFirstPage,\r\n\t\tpagesLength,\r\n\t} = useMemo(() => {\r\n\t\tconst isLastPageEmpty =\r\n\t\t\tinfiniteQuery?.data?.pages?.[infiniteQuery.data.pages.length - 1]?.items\r\n\t\t\t\t.length === 0;\r\n\r\n\t\t// const isInFirstPage = currentPageIndex === 0;\r\n\t\t// const isInLastPage =\r\n\t\t// \tcurrentPageIndex + 1 === infiniteQuery?.data?.pages?.length;\r\n\t\tconst isInBeforeLastPage =\r\n\t\t\ttypeof infiniteQuery?.data?.pages?.length === 'number' &&\r\n\t\t\tinfiniteQuery.data.pages.length !== 0 &&\r\n\t\t\tcurrentPageIndex + 1 === infiniteQuery.data.pages.length - 1;\r\n\r\n\t\tlet pagesLength = infiniteQuery?.data?.pages?.length || 0;\r\n\t\tif (isLastPageEmpty && pagesLength !== 0) pagesLength--;\r\n\t\treturn {\r\n\t\t\tisLastPageEmpty,\r\n\t\t\tisInBeforeLastPage,\r\n\t\t\t// isInLastPage,\r\n\t\t\t// isInFirstPage,\r\n\t\t\tpagesLength,\r\n\t\t};\r\n\t}, [currentPageIndex, infiniteQuery?.data?.pages]);\r\n\r\n\tconst isNextPageDisabled = useMemo(\r\n\t\t() =>\r\n\t\t\t(!infiniteQuery.hasNextPage &&\r\n\t\t\t\tcurrentPageIndex + 1 === infiniteQuery.data?.pages.length) ||\r\n\t\t\tinfiniteQuery.isFetching ||\r\n\t\t\t(isInBeforeLastPage && isLastPageEmpty),\r\n\t\t[\r\n\t\t\tcurrentPageIndex,\r\n\t\t\tinfiniteQuery.data?.pages.length,\r\n\t\t\tinfiniteQuery.hasNextPage,\r\n\t\t\tinfiniteQuery.isFetching,\r\n\t\t\tisInBeforeLastPage,\r\n\t\t\tisLastPageEmpty,\r\n\t\t],\r\n\t);\r\n\r\n\tconst isPreviousPageDisabled = useMemo(\r\n\t\t() => currentPageIndex === 0 || infiniteQuery.isFetching,\r\n\t\t[currentPageIndex, infiniteQuery.isFetching],\r\n\t);\r\n\r\n\tconst onPageChange = useCallback(() => {\r\n\t\tsetRowSelection({});\r\n\t}, [setRowSelection]);\r\n\r\n\treturn (\r\n\t\t<div className={cx(classNames?.container)}>\r\n\t\t\t<button\r\n\t\t\t\ttitle='refetch'\r\n\t\t\t\tdisabled={infiniteQuery.isFetching}\r\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-misused-promises\r\n\t\t\t\tonClick={async () => {\r\n\t\t\t\t\tif (infiniteQuery.isFetching) return;\r\n\t\t\t\t\tawait infiniteQuery.refetch();\r\n\t\t\t\t}}\r\n\t\t\t\tclassName={cx(classNames?.refetchButton)}\r\n\t\t\t>\r\n\t\t\t\t<IoMdRefresh style={{ background: 'transparent', fontSize: '120%' }} />\r\n\t\t\t</button>\r\n\t\t\t<p title='page/Loaded Pages'>\r\n\t\t\t\t{currentPageIndex + 1}/{pagesLength}\r\n\t\t\t</p>\r\n\t\t\t<button\r\n\t\t\t\ttitle={\r\n\t\t\t\t\tisNextPageDisabled\r\n\t\t\t\t\t\t? 'There is no more previous page'\r\n\t\t\t\t\t\t: 'Previous page'\r\n\t\t\t\t}\r\n\t\t\t\tdisabled={isPreviousPageDisabled}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tif (isPreviousPageDisabled) return;\r\n\t\t\t\t\tdecrementCurrentPageIndex();\r\n\t\t\t\t\tonPageChange();\r\n\t\t\t\t}}\r\n\t\t\t\tclassName={cx(classNames?.previousPageButton)}\r\n\t\t\t>\r\n\t\t\t\t<IoIosArrowBack\r\n\t\t\t\t\tstyle={{ background: 'transparent', fontSize: '120%' }}\r\n\t\t\t\t/>\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\ttitle={isNextPageDisabled ? 'There is no more next page' : 'Next page'}\r\n\t\t\t\tdisabled={isNextPageDisabled}\r\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-misused-promises\r\n\t\t\t\tonClick={async () => {\r\n\t\t\t\t\tif (isNextPageDisabled) return;\r\n\r\n\t\t\t\t\tawait infiniteQuery.fetchNextPage().then((res) => {\r\n\t\t\t\t\t\tif (res.data && Array.isArray(res.data?.pages)) {\r\n\t\t\t\t\t\t\tconst lastPage = res.data.pages[res.data.pages.length - 1];\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t!lastPage ||\r\n\t\t\t\t\t\t\t\t(isInBeforeLastPage && lastPage.items.length === 0)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tincrementCurrentPageIndex();\r\n\t\t\t\t\t\tonPageChange();\r\n\t\t\t\t\t});\r\n\t\t\t\t}}\r\n\t\t\t\tclassName={cx(classNames?.nextPageButton)}\r\n\t\t\t>\r\n\t\t\t\t<IoIosArrowForward\r\n\t\t\t\t\tstyle={{ background: 'transparent', fontSize: '120%' }}\r\n\t\t\t\t/>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TableMetaData;\r\n","export const cx = (...classesArr: (string | undefined)[]) => {\r\n\tlet classesStr = '';\r\n\tlet className: string | undefined;\r\n\tfor (className of classesArr) {\r\n\t\tif (typeof className === 'string') classesStr += className + ' ';\r\n\t}\r\n\r\n\treturn classesStr.trimEnd();\r\n};\r\n\r\n/*\r\nfunction flattenArray<T>(arr: T[]): T[] {\r\n  const flattened: T[] = [];\r\n  let i = 0;\r\n\r\n  while (i < arr.length) {\r\n    const item = arr[i];\r\n    if (Array.isArray(item)) {\r\n      arr.splice(i, 1, ...item);\r\n      i--;\r\n    } else {\r\n      flattened.push(item);\r\n    }\r\n    i++;\r\n  }\r\n\r\n  return flattened;\r\n}\r\n*/\r\n","import type { SVGProps } from 'react';\r\n\r\nconst IoIosArrowBack = (props: SVGProps<SVGSVGElement>) => {\r\n\treturn (\r\n\t\t<svg\r\n\t\t\tstroke='currentColor'\r\n\t\t\tfill='currentColor'\r\n\t\t\tstroke-width='0'\r\n\t\t\tviewBox='0 0 512 512'\r\n\t\t\theight='1em'\r\n\t\t\twidth='1em'\r\n\t\t\txmlns='http://www.w3.org/2000/svg'\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t<path d='M217.9 256L345 129c9.4-9.4 9.4-24.6 0-33.9-9.4-9.4-24.6-9.3-34 0L167 239c-9.1 9.1-9.3 23.7-.7 33.1L310.9 417c4.7 4.7 10.9 7 17 7s12.3-2.3 17-7c9.4-9.4 9.4-24.6 0-33.9L217.9 256z'></path>\r\n\t\t</svg>\r\n\t);\r\n};\r\n\r\nexport default IoIosArrowBack;\r\n","import type { SVGProps } from 'react';\r\n\r\nconst IoMdRefresh = (props: SVGProps<SVGSVGElement>) => {\r\n\treturn (\r\n\t\t<svg\r\n\t\t\tstroke='currentColor'\r\n\t\t\tfill='currentColor'\r\n\t\t\tstroke-width='0'\r\n\t\t\tviewBox='0 0 512 512'\r\n\t\t\theight='1em'\r\n\t\t\twidth='1em'\r\n\t\t\txmlns='http://www.w3.org/2000/svg'\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t<path d='M256 388c-72.597 0-132-59.405-132-132 0-72.601 59.403-132 132-132 36.3 0 69.299 15.4 92.406 39.601L278 234h154V80l-51.698 51.702C348.406 99.798 304.406 80 256 80c-96.797 0-176 79.203-176 176s78.094 176 176 176c81.045 0 148.287-54.134 169.401-128H378.85c-18.745 49.561-67.138 84-122.85 84z'></path>\r\n\t\t</svg>\r\n\t);\r\n};\r\n\r\nexport default IoMdRefresh;\r\n","import type { SVGProps } from 'react';\r\n\r\nconst IoIosArrowForward = (props: SVGProps<SVGSVGElement>) => {\r\n\treturn (\r\n\t\t<svg\r\n\t\t\tstroke='currentColor'\r\n\t\t\tfill='currentColor'\r\n\t\t\tstroke-width='0'\r\n\t\t\tviewBox='0 0 512 512'\r\n\t\t\theight='1em'\r\n\t\t\twidth='1em'\r\n\t\t\txmlns='http://www.w3.org/2000/svg'\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t<path d='M294.1 256L167 129c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.3 34 0L345 239c9.1 9.1 9.3 23.7.7 33.1L201.1 417c-4.7 4.7-10.9 7-17 7s-12.3-2.3-17-7c-9.4-9.4-9.4-24.6 0-33.9l127-127.1z'></path>\r\n\t\t</svg>\r\n\t);\r\n};\r\n\r\nexport default IoIosArrowForward;\r\n","import { useMemo } from 'react';\r\nimport { type StoreApi, useStore } from 'zustand';\r\nimport type { InfiniteQuery, TableStore } from '../utils/types';\r\nimport { cx } from '../utils/internal';\r\n\r\nconst TableLoadMore = <\r\n\tQueryItem extends Record<string, unknown>,\r\n\tTableItem extends Record<\r\n\t\tExclude<string, keyof QueryItem> | keyof QueryItem,\r\n\t\tunknown\r\n\t>,\r\n>({\r\n\tinfiniteQuery,\r\n\tstore,\r\n\tclassNames = {\r\n\t\tcontainer: '',\r\n\t\tloadMoreButton: '',\r\n\t},\r\n}: {\r\n\tinfiniteQuery: InfiniteQuery<QueryItem>;\r\n\tstore: StoreApi<TableStore<TableItem>>;\r\n\tclassNames?: {\r\n\t\tcontainer: string;\r\n\t\tloadMoreButton: string;\r\n\t};\r\n}) => {\r\n\tconst currentPageIndex = useStore(store, (state) => state.currentPageIndex);\r\n\r\n\tconst { incrementCurrentPageIndex } = useStore(store, (state) => state.utils);\r\n\r\n\tconst { isLastPageEmpty, isInBeforeLastPage } = useMemo(() => {\r\n\t\tconst isLastPageEmpty =\r\n\t\t\tinfiniteQuery?.data?.pages?.[infiniteQuery.data.pages.length - 1]?.items\r\n\t\t\t\t.length === 0;\r\n\r\n\t\tconst isInFirstPage = currentPageIndex === 0;\r\n\t\tconst isInLastPage =\r\n\t\t\tcurrentPageIndex + 1 === infiniteQuery?.data?.pages?.length;\r\n\t\tconst isInBeforeLastPage =\r\n\t\t\ttypeof infiniteQuery?.data?.pages?.length === 'number' &&\r\n\t\t\tinfiniteQuery.data.pages.length !== 0 &&\r\n\t\t\tcurrentPageIndex + 1 === infiniteQuery.data.pages.length - 1;\r\n\r\n\t\tlet pagesLength = infiniteQuery?.data?.pages?.length || 0;\r\n\t\tif (isLastPageEmpty && pagesLength !== 0) pagesLength--;\r\n\t\treturn {\r\n\t\t\tisLastPageEmpty,\r\n\t\t\tisInBeforeLastPage,\r\n\t\t\tisInLastPage,\r\n\t\t\tisInFirstPage,\r\n\t\t\tpagesLength,\r\n\t\t};\r\n\t}, [currentPageIndex, infiniteQuery?.data?.pages]);\r\n\r\n\tconst isLoadMoreButtonDisabled = useMemo(\r\n\t\t() =>\r\n\t\t\t(!infiniteQuery.hasNextPage &&\r\n\t\t\t\tcurrentPageIndex + 1 === infiniteQuery.data?.pages.length) ||\r\n\t\t\tinfiniteQuery.isFetching ||\r\n\t\t\t(isInBeforeLastPage && isLastPageEmpty),\r\n\t\t[\r\n\t\t\tcurrentPageIndex,\r\n\t\t\tinfiniteQuery.data?.pages.length,\r\n\t\t\tinfiniteQuery.hasNextPage,\r\n\t\t\tinfiniteQuery.isFetching,\r\n\t\t\tisInBeforeLastPage,\r\n\t\t\tisLastPageEmpty,\r\n\t\t],\r\n\t);\r\n\r\n\tif (!infiniteQuery.hasNextPage) return <></>;\r\n\r\n\treturn (\r\n\t\t<div className={cx(classNames?.container)}>\r\n\t\t\t<button\r\n\t\t\t\ttitle={\r\n\t\t\t\t\tisLoadMoreButtonDisabled ? 'There is no more next page' : 'Next page'\r\n\t\t\t\t}\r\n\t\t\t\tdisabled={isLoadMoreButtonDisabled}\r\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-misused-promises\r\n\t\t\t\tonClick={async () => {\r\n\t\t\t\t\tif (isLoadMoreButtonDisabled) return;\r\n\r\n\t\t\t\t\tawait infiniteQuery.fetchNextPage().then((res) => {\r\n\t\t\t\t\t\tif (res.data && Array.isArray(res.data?.pages)) {\r\n\t\t\t\t\t\t\tconst lastPage = res.data.pages[res.data.pages.length - 1];\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t!lastPage ||\r\n\t\t\t\t\t\t\t\t(isInBeforeLastPage && lastPage.items.length === 0)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tincrementCurrentPageIndex();\r\n\t\t\t\t\t});\r\n\t\t\t\t}}\r\n\t\t\t\tclassName={cx(classNames?.loadMoreButton)}\r\n\t\t\t\t// eslint-disable-next-line react/no-children-prop\r\n\t\t\t\tchildren='load more'\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TableLoadMore;\r\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\nexport { default as TableMetaData } from './components/TableMetaData';\r\nexport { default as TableLoadMore } from './components/TableLoadMore';\r\n\r\nimport type { ColumnDef } from '@tanstack/react-table';\r\n\r\nimport {\r\n\tflexRender,\r\n\tgetCoreRowModel,\r\n\tgetFilteredRowModel,\r\n\tuseReactTable,\r\n} from '@tanstack/react-table';\r\n\r\nimport type { HTMLProps } from 'react';\r\n\r\nimport type { StoreApi } from 'zustand/vanilla';\r\n\r\nimport { useEffect, useRef, useMemo } from 'react';\r\n\r\nimport { useStore } from 'zustand';\r\n\r\nimport Filter from './components/Filter';\r\nimport type { InfiniteQuery, TableStore } from './utils/types';\r\nimport { cx } from './utils/internal';\r\n\r\nconst ROW_SELECT = 'row-select' as const;\r\n\r\nfunction IndeterminateCheckbox({\r\n\tindeterminate,\r\n\tclassName = '',\r\n\t...props\r\n}: { indeterminate?: boolean } & HTMLProps<HTMLInputElement>) {\r\n\tconst ref = useRef<HTMLInputElement>(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!ref.current) return;\r\n\r\n\t\tif (typeof indeterminate === 'boolean') {\r\n\t\t\tref.current.indeterminate = !props.checked && indeterminate;\r\n\t\t}\r\n\t}, [indeterminate, props.checked]);\r\n\r\n\treturn <input type='checkbox' ref={ref} className={className} {...props} />;\r\n}\r\n\r\n// reactTable?: Omit<\r\n// \tTable<QueryItem & TExtraData>,\r\n// \t| 'data'\r\n// \t| 'columns'\r\n// \t| 'state'\r\n// \t| 'onRowSelectionChange'\r\n// \t| 'onColumnFiltersChange'\r\n// \t| 'getCoreRowModel'\r\n// \t| 'getFilteredRowModel'\r\n// \t| 'columnResizeMode'\r\n// >;\r\nexport const CustomTable = <\r\n\tQueryItem extends Record<string, unknown>,\r\n\tTableItem extends Record<\r\n\t\tExclude<string, keyof QueryItem> | keyof QueryItem,\r\n\t\tunknown\r\n\t>,\r\n>({\r\n\tinfiniteQuery,\r\n\tstore,\r\n\tcanMultiRowSelect,\r\n\t...props\r\n}: {\r\n\tinfiniteQuery: InfiniteQuery<QueryItem>;\r\n\tcolumns: ColumnDef<TableItem>[];\r\n\tstore: StoreApi<TableStore<TableItem>>;\r\n\tcanMultiRowSelect?: boolean;\r\n}) => {\r\n\tconst currentPageIndex = useStore(store, (state) => state.currentPageIndex);\r\n\tconst rowSelection = useStore(store, (state) => state.rowSelection);\r\n\tconst columnFilters = useStore(store, (state) => state.columnFilters);\r\n\tconst classNames = useStore(store, (state) => state.classNames);\r\n\tconst pageViewMode = useStore(store, (state) => state.pageViewMode);\r\n\tconst tableAutoToFixedOnLoad = useStore(\r\n\t\tstore,\r\n\t\t(state) => state.tableAutoToFixedOnLoad,\r\n\t);\r\n\r\n\tconst filterByFormValues = useStore(\r\n\t\tstore,\r\n\t\t(state) => state.filterByFormValues,\r\n\t);\r\n\r\n\tconst filterersKeysMap = useMemo(\r\n\t\t() =>\r\n\t\t\tObject.fromEntries(\r\n\t\t\t\tObject.keys(filterByFormValues || {}).map((key) => [key, true]),\r\n\t\t\t),\r\n\t\t[filterByFormValues],\r\n\t);\r\n\r\n\tconst { setRowSelection, setColumnFilters } = useStore(\r\n\t\tstore,\r\n\t\t(state) => state.utils,\r\n\t);\r\n\r\n\tconst columns: ColumnDef<TableItem>[] = useMemo(() => {\r\n\t\tconst columns = [\r\n\t\t\t...(props.columns.map((column) => ({\r\n\t\t\t\t...column,\r\n\t\t\t\tenableColumnFilter: !!(\r\n\t\t\t\t\t(column as { accessorKey?: string }).accessorKey &&\r\n\t\t\t\t\tfilterersKeysMap[(column as { accessorKey: string }).accessorKey]\r\n\t\t\t\t),\r\n\t\t\t})) as ColumnDef<TableItem>[]),\r\n\t\t];\r\n\r\n\t\tif (canMultiRowSelect)\r\n\t\t\tcolumns.unshift({\r\n\t\t\t\taccessorKey: 'ROW_SELECT',\r\n\t\t\t\tid: ROW_SELECT,\r\n\t\t\t\tenableHiding: true,\r\n\t\t\t\theader: ({ table }) => (\r\n\t\t\t\t\t<div className={cx(classNames.thead?.th?.checkboxContainer?._)}>\r\n\t\t\t\t\t\t<IndeterminateCheckbox\r\n\t\t\t\t\t\t\tchecked={table.getIsAllRowsSelected()}\r\n\t\t\t\t\t\t\tindeterminate={table.getIsSomeRowsSelected()}\r\n\t\t\t\t\t\t\tonChange={table.getToggleAllRowsSelectedHandler()}\r\n\t\t\t\t\t\t\tclassName={cx(classNames.thead?.th?.checkboxContainer?.checkBox)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t),\r\n\t\t\t\tcell: ({ row }) => (\r\n\t\t\t\t\t<div className={cx(classNames.tbody?.td?.checkboxContainer?._)}>\r\n\t\t\t\t\t\t<IndeterminateCheckbox\r\n\t\t\t\t\t\t\tchecked={row.getIsSelected()}\r\n\t\t\t\t\t\t\tindeterminate={row.getIsSomeSelected()}\r\n\t\t\t\t\t\t\tonChange={row.getToggleSelectedHandler()}\r\n\t\t\t\t\t\t\tclassName={cx(classNames.tbody?.td?.checkboxContainer?.checkBox)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t),\r\n\t\t\t});\r\n\r\n\t\treturn columns;\r\n\t}, [\r\n\t\tcanMultiRowSelect,\r\n\t\tclassNames.tbody?.td?.checkboxContainer?._,\r\n\t\tclassNames.tbody?.td?.checkboxContainer?.checkBox,\r\n\t\tclassNames.thead?.th?.checkboxContainer?._,\r\n\t\tclassNames.thead?.th?.checkboxContainer?.checkBox,\r\n\t\tfilterersKeysMap,\r\n\t\tprops.columns,\r\n\t]);\r\n\r\n\tconst currentPage = useMemo(() => {\r\n\t\tif (pageViewMode === 'INFINITE_SCROLL')\r\n\t\t\treturn (infiniteQuery?.data?.pages || [])\r\n\t\t\t\t.map((page) => page.items)\r\n\t\t\t\t.flat(1);\r\n\r\n\t\treturn infiniteQuery?.data?.pages?.[currentPageIndex]?.items || [];\r\n\t}, [currentPageIndex, infiniteQuery.data?.pages, pageViewMode]);\r\n\r\n\tconst table = useReactTable({\r\n\t\tdata: currentPage as unknown as TableItem[],\r\n\t\tcolumns,\r\n\t\tstate: { columnFilters, rowSelection },\r\n\t\tonRowSelectionChange: setRowSelection,\r\n\t\tonColumnFiltersChange: setColumnFilters,\r\n\t\tgetCoreRowModel: getCoreRowModel(),\r\n\t\tgetFilteredRowModel: getFilteredRowModel(),\r\n\t\tenableColumnResizing: true,\r\n\t\tcolumnResizeMode: 'onChange',\r\n\t});\r\n\r\n\tconst isLoading = useMemo(\r\n\t\t() =>\r\n\t\t\tinfiniteQuery.isInitialLoading ||\r\n\t\t\tinfiniteQuery.isFetchingNextPage ||\r\n\t\t\tinfiniteQuery.isFetchingPreviousPage,\r\n\t\t[\r\n\t\t\tinfiniteQuery.isFetchingNextPage,\r\n\t\t\tinfiniteQuery.isFetchingPreviousPage,\r\n\t\t\tinfiniteQuery.isInitialLoading,\r\n\t\t],\r\n\t);\r\n\r\n\tuseMemo(() => {\r\n\t\tstore.setState({ table });\r\n\t}, [store, table]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (infiniteQuery.isInitialLoading) setRowSelection({});\r\n\t}, [infiniteQuery.isInitialLoading, setRowSelection]);\r\n\r\n\treturn (\r\n\t\t<table\r\n\t\t\tclassName={cx(classNames.table)}\r\n\t\t\tstyle={{\r\n\t\t\t\ttableLayout: tableAutoToFixedOnLoad\r\n\t\t\t\t\t? isLoading\r\n\t\t\t\t\t\t? 'auto'\r\n\t\t\t\t\t\t: 'fixed'\r\n\t\t\t\t\t: undefined,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<thead className={cx(classNames.thead?._)}>\r\n\t\t\t\t{table.getHeaderGroups().map((headerGroup) => (\r\n\t\t\t\t\t<tr key={headerGroup.id} className={cx(classNames.thead?.tr)}>\r\n\t\t\t\t\t\t{headerGroup.headers.map((header) => (\r\n\t\t\t\t\t\t\t<th\r\n\t\t\t\t\t\t\t\tkey={header.id}\r\n\t\t\t\t\t\t\t\tclassName={cx(classNames.thead?.th?._)}\r\n\t\t\t\t\t\t\t\t// header.column.getCanFilter() ? \"px-8 py-6\" : \"px-8 py-4\"\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\twidth:\r\n\t\t\t\t\t\t\t\t\t\theader.column.id === ROW_SELECT\r\n\t\t\t\t\t\t\t\t\t\t\t? 'min-content'\r\n\t\t\t\t\t\t\t\t\t\t\t: header.getSize(),\r\n\t\t\t\t\t\t\t\t\tpaddingLeft: header.column.id === ROW_SELECT ? 0 : undefined,\r\n\t\t\t\t\t\t\t\t\tpaddingRight: header.column.id === ROW_SELECT ? 0 : undefined,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName={cx(classNames.thead?.th?.container)}\r\n\t\t\t\t\t\t\t\t\t// header.column.getCanFilter() ? \"gap-2\" : \"\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{header.isPlaceholder ? null : (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t{flexRender(\r\n\t\t\t\t\t\t\t\t\t\t\t\theader.column.columnDef.header,\r\n\t\t\t\t\t\t\t\t\t\t\t\theader.getContext(),\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t{header.column.getCanFilter() ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Filter<TableItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumn={header.column}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttable={table}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstore={store}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{header.column.getCanResize() && (\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonMouseDown={header.getResizeHandler()}\r\n\t\t\t\t\t\t\t\t\t\tonTouchStart={header.getResizeHandler()}\r\n\t\t\t\t\t\t\t\t\t\tclassName={cx(classNames.thead?.th?.resizeController)}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: header.column.getIsResizing()\r\n\t\t\t\t\t\t\t\t\t\t\t\t? 'rgb(67 56 202 / var(--tw-bg-opacity, 1))'\r\n\t\t\t\t\t\t\t\t\t\t\t\t: '',\r\n\t\t\t\t\t\t\t\t\t\t\topacity: header.column.getIsResizing() ? 1 : '',\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t))}\r\n\t\t\t</thead>\r\n\t\t\t<tbody\r\n\t\t\t\tclassName={cx(classNames.tbody?._)}\r\n\t\t\t\tstyle={isLoading ? { position: 'relative', isolation: 'isolate' } : {}}\r\n\t\t\t>\r\n\t\t\t\t{table.getHeaderGroups()[0] && (\r\n\t\t\t\t\t<tr\r\n\t\t\t\t\t\tclassName={cx(classNames.tbody?.loadingTr?._)}\r\n\t\t\t\t\t\tstyle={\r\n\t\t\t\t\t\t\tinfiniteQuery.isFetching\r\n\t\t\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t\t\t...(!infiniteQuery.isInitialLoading\r\n\t\t\t\t\t\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tflexDirection: 'column',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbottom: 0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tleft: 0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tright: 0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tzIndex: 2,\r\n\t\t\t\t\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t\t\t\t\t: {}),\r\n\r\n\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\theight: '100%',\r\n\t\t\t\t\t\t\t\t\t\tflexGrow: 1,\r\n\t\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t\t: { display: 'none' }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{table.getHeaderGroups()[0]!.headers.map((headers) => (\r\n\t\t\t\t\t\t\t<td\r\n\t\t\t\t\t\t\t\tkey={headers.id}\r\n\t\t\t\t\t\t\t\tclassName={cx(classNames.tbody?.loadingTr?.td)}\r\n\t\t\t\t\t\t\t\tstyle={\r\n\t\t\t\t\t\t\t\t\tinfiniteQuery.isFetching\r\n\t\t\t\t\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\theight: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tflexGrow: 1,\r\n\t\t\t\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t\t\t\t: {}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t)}\r\n\t\t\t\t{table.getRowModel().rows.map((row) => (\r\n\t\t\t\t\t<tr key={row.id} className={cx(classNames.tbody?.tr)}>\r\n\t\t\t\t\t\t{row.getVisibleCells().map((cell) => (\r\n\t\t\t\t\t\t\t<td\r\n\t\t\t\t\t\t\t\tkey={cell.id}\r\n\t\t\t\t\t\t\t\tclassName={cx(classNames.tbody?.td?._)}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\twidth:\r\n\t\t\t\t\t\t\t\t\t\tcell.column.id === ROW_SELECT\r\n\t\t\t\t\t\t\t\t\t\t\t? 'min-content'\r\n\t\t\t\t\t\t\t\t\t\t\t: cell.column.getSize(),\r\n\t\t\t\t\t\t\t\t\tpaddingLeft: cell.column.id === ROW_SELECT ? 0 : undefined,\r\n\t\t\t\t\t\t\t\t\tpaddingRight: cell.column.id === ROW_SELECT ? 0 : undefined,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t))}\r\n\t\t\t</tbody>\r\n\t\t\t<tfoot className={cx(classNames.tfoot?._)}>\r\n\t\t\t\t{table.getFooterGroups().map((footerGroup) => (\r\n\t\t\t\t\t<tr key={footerGroup.id} className={cx(classNames.tfoot?.tr)}>\r\n\t\t\t\t\t\t{footerGroup.headers.map((header) => (\r\n\t\t\t\t\t\t\t<th\r\n\t\t\t\t\t\t\t\tkey={header.id}\r\n\t\t\t\t\t\t\t\tclassName={cx(classNames.tfoot?.th)}\r\n\t\t\t\t\t\t\t\tstyle={{ width: header.column.getSize() }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{header.isPlaceholder\r\n\t\t\t\t\t\t\t\t\t? null\r\n\t\t\t\t\t\t\t\t\t: flexRender(\r\n\t\t\t\t\t\t\t\t\t\t\theader.column.columnDef.footer,\r\n\t\t\t\t\t\t\t\t\t\t\theader.getContext(),\r\n\t\t\t\t\t\t\t\t\t  )}\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t))}\r\n\t\t\t</tfoot>\r\n\t\t</table>\r\n\t);\r\n};\r\n","import type { TFilters, TableStore, TStringFilter } from '../utils/types';\r\nimport type { StoreApi } from 'zustand';\r\nimport type { Table, Column, DeepKeys } from '@tanstack/react-table';\r\nimport type { InputHTMLAttributes } from 'react';\r\n\r\nimport { useStore } from 'zustand';\r\nimport { useCallback, useEffect, useState, useMemo } from 'react';\r\n\r\nfunction DebouncedInput({\r\n\tvalue: initialValue,\r\n\tonChange,\r\n\tdebounce = 500,\r\n\t...props\r\n}: {\r\n\tvalue: string | number;\r\n\tonChange: (value: string) => void;\r\n\tdebounce?: number;\r\n} & Omit<InputHTMLAttributes<HTMLInputElement>, 'onChange'>) {\r\n\tconst [value, setValue] = useState(initialValue);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetValue(initialValue);\r\n\t}, [initialValue]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst timeout = setTimeout(() => {\r\n\t\t\tonChange(value.toString());\r\n\t\t}, debounce);\r\n\r\n\t\treturn () => clearTimeout(timeout);\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [debounce, value]);\r\n\r\n\treturn (\r\n\t\t<input\r\n\t\t\t{...props}\r\n\t\t\tvalue={value}\r\n\t\t\tonChange={(e) => setValue(e.target.value)}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nconst isAFilter = (item: unknown): item is { [key: string]: TFilters } =>\r\n\t!!(item && typeof item === 'object');\r\n\r\nfunction Filter<TableItem extends Record<string, unknown>>({\r\n\tcolumn,\r\n\t// table,\r\n\tstore,\r\n}: {\r\n\tcolumn: Column<TableItem, unknown>;\r\n\ttable: Table<TableItem>;\r\n\tstore: StoreApi<TableStore<TableItem>>;\r\n}) {\r\n\t// const firstValue = useMemo(\r\n\t// \t() => table.getPreFilteredRowModel().flatRows[0]?.getValue(column.id),\r\n\t// \t[column.id, table],\r\n\t// );\r\n\tconst filterByFormValues = useStore(\r\n\t\tstore,\r\n\t\t(state: TableStore<TableItem>) => state.filterByFormValues,\r\n\t);\r\n\r\n\tconst columnFilterValue = useMemo(() => column.getFilterValue(), [column]);\r\n\tconst remoteFilter = useStore(\r\n\t\tstore,\r\n\t\t(state: TableStore<TableItem>) => state.remoteFilter,\r\n\t);\r\n\tconst { setFilterByFormValues } = useStore(\r\n\t\tstore,\r\n\t\t(state: TableStore<TableItem>) => state.utils,\r\n\t);\r\n\r\n\tconst _filterByFormValues = isAFilter(filterByFormValues)\r\n\t\t? column.id in filterByFormValues &&\r\n\t\t  typeof filterByFormValues[column.id] === 'object' &&\r\n\t\t  filterByFormValues[column.id]\r\n\t\t\t? (filterByFormValues[column.id] as TFilters | undefined)\r\n\t\t\t: undefined\r\n\t\t: undefined;\r\n\r\n\tif (!_filterByFormValues) return <></>;\r\n\r\n\tif (_filterByFormValues.dataType === 'text')\r\n\t\treturn (\r\n\t\t\t<StringFilter\r\n\t\t\t\tcolumn={column}\r\n\t\t\t\tfilterByFormValues={_filterByFormValues}\r\n\t\t\t\tstore={store}\r\n\t\t\t\tcolumnFilterValue={columnFilterValue}\r\n\t\t\t\tremoteFilter={remoteFilter}\r\n\t\t\t\tsetFilterByFormValues={setFilterByFormValues}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\treturn <></>;\r\n\r\n\t/*\r\n\treturn typeof firstValue === 'number' ? (\r\n\t\t<div>\r\n\t\t\t<div className='flex space-x-2'>\r\n\t\t\t\t<DebouncedInput\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\tmin={Number(column.getFacetedMinMaxValues()?.[0] ?? '')}\r\n\t\t\t\t\tmax={Number(column.getFacetedMinMaxValues()?.[1] ?? '')}\r\n\t\t\t\t\tvalue={(columnFilterValue as [number, number])?.[0] ?? ''}\r\n\t\t\t\t\tonChange={(value) =>\r\n\t\t\t\t\t\tcolumn.setFilterValue((old: [number, number]) => [value, old?.[1]])\r\n\t\t\t\t\t}\r\n\t\t\t\t\tplaceholder={`Min`}\r\n\t\t\t\t\tclassName='w-24 px-2 py-1 border rounded shadow'\r\n\t\t\t\t\tname={`${column.id}-min`}\r\n\t\t\t\t/>\r\n\t\t\t\t<DebouncedInput\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\tmin={Number(column.getFacetedMinMaxValues()?.[0] ?? '')}\r\n\t\t\t\t\tmax={Number(column.getFacetedMinMaxValues()?.[1] ?? '')}\r\n\t\t\t\t\tvalue={(columnFilterValue as [number, number])?.[1] ?? ''}\r\n\t\t\t\t\tonChange={(value) =>\r\n\t\t\t\t\t\tcolumn.setFilterValue((old: [number, number]) => [old?.[0], value])\r\n\t\t\t\t\t}\r\n\t\t\t\t\tplaceholder={`Max`}\r\n\t\t\t\t\tclassName='w-24 px-2 py-1 border rounded shadow'\r\n\t\t\t\t\tname={`${column.id}-max`}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='h-1' />\r\n\t\t</div>\r\n\t) : (\r\n\t\t<>\r\n\t\t\t<DebouncedInput\r\n\t\t\t\ttype='text'\r\n\t\t\t\tvalue={(columnFilterValue ?? '') as string}\r\n\t\t\t\tonChange={(value) => column.setFilterValue(value)}\r\n\t\t\t\tplaceholder={`Search...`}\r\n\t\t\t\tclassName='px-2 py-1 border rounded shadow w-36'\r\n\t\t\t\tlist={column.id + 'list'}\r\n\t\t\t\tname={column.id}\r\n\t\t\t/>\r\n\t\t\t<div className='h-1' />\r\n\t\t</>\r\n\t);\r\n\t*/\r\n}\r\n\r\nconst StringFilter = <TableItem extends Record<string, unknown>>({\r\n\tcolumn,\r\n\tfilterByFormValues,\r\n\t// store,\r\n\tcolumnFilterValue,\r\n\tremoteFilter,\r\n\tsetFilterByFormValues,\r\n}: {\r\n\tcolumn: Column<TableItem, unknown>;\r\n\tfilterByFormValues: TStringFilter;\r\n\tstore: StoreApi<TableStore<TableItem>>;\r\n\tcolumnFilterValue: unknown;\r\n\tremoteFilter: TableStore<TableItem>['remoteFilter'];\r\n\tsetFilterByFormValues: TableStore<TableItem>['utils']['setFilterByFormValues'];\r\n} & Omit<InputHTMLAttributes<HTMLInputElement>, 'onChange'>) => {\r\n\t// const columnFilterValue = useMemo(() => column.getFilterValue(), [column]);\r\n\t// const columnFilterValue = useMemo(() => column.getFilterValue(), [column]);\r\n\tconst value =\r\n\t\tremoteFilter && column.id && filterByFormValues\r\n\t\t\t? filterByFormValues.value ?? ''\r\n\t\t\t: ((columnFilterValue ?? '') as string);\r\n\r\n\tconst onChange = useCallback(\r\n\t\t(value: string) => {\r\n\t\t\tif (remoteFilter)\r\n\t\t\t\treturn setFilterByFormValues((prevData) => {\r\n\t\t\t\t\tconst filter = prevData[column.id as DeepKeys<TableItem>];\r\n\r\n\t\t\t\t\tif (!filter) return prevData;\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...prevData,\r\n\t\t\t\t\t\t[column.id]:\r\n\t\t\t\t\t\t\t!filter || filter?.dataType !== 'text'\r\n\t\t\t\t\t\t\t\t? filter\r\n\t\t\t\t\t\t\t\t: { ...filter, value },\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\tcolumn.setFilterValue(value);\r\n\t\t},\r\n\t\t[column, remoteFilter, setFilterByFormValues],\r\n\t);\r\n\r\n\treturn (\r\n\t\t<DebouncedInput\r\n\t\t\ttype='text'\r\n\t\t\tvalue={value}\r\n\t\t\tonChange={onChange}\r\n\t\t\tclassName='px-2 py-1 border rounded shadow w-36'\r\n\t\t\tlist={column.id + 'list'}\r\n\t\t\tname={column.id}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default Filter;\r\n"],"mappings":"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","names":["jsx","jsx","jsx","isLastPageEmpty","isInBeforeLastPage","pagesLength","useMemo","useStore","jsx","useStore","useMemo","isLastPageEmpty","isInBeforeLastPage","useEffect","useRef","useMemo","useStore","useStore","useCallback","useEffect","useMemo","Fragment","jsx","value","Fragment","jsx","jsxs","useRef","useEffect","useStore","useMemo","columns","table"]}