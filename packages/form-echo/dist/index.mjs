function I(s,n){let a="";switch(n){case"date":a=s.toISOString().slice(0,10);break;case"time":a=s.toTimeString().slice(0,8);break;case"datetime-local":a=s.toISOString().slice(0,16),a=a.replace("T"," ");break;case"week":let y=s.getFullYear(),c=A(s);a=`${y}-W${c.toString().length<2?"0"+c.toString():c.toString()}`;break;case"month":a=s.toISOString().slice(0,7);break;default:break}return a}function H(s,n){let a;switch(n){case"date":a=new Date(s);break;case"time":let[y,c,l]=s.toString().split(":");a=new Date,a.setHours(Number(y)),a.setMinutes(Number(c)),a.setSeconds(Number(l));break;case"datetime-local":a=new Date(s.toString().replace(" ","T"));break;case"week":let[F,g]=s.toString().split("-W"),S=Number(F),h=Number(g);a=N(S,h);break;case"month":a=new Date(`${s}-01`);break;default:a=new Date;break}return a}function A(s){let n=new Date(s.getFullYear(),0,1),a=(s.valueOf()-n.valueOf())/(1e3*60*60*24);return Math.floor(a/7)+1}function N(s,n){let a=new Date(s,0,1),y=(8-a.getDay())%7,c=new Date(a);c.setDate(a.getDate()+y);let l=(n-1)*7,F=new Date(c);return F.setDate(c.getDate()+l),F}var O={formatDate:I,parseDate:H,getWeekNumber:A,getFirstDateOfWeek:N},C=O;import{createStore as T}from"zustand";import{useRef as $,useId as R}from"react";var j=()=>"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,s=>{let n=Math.random()*16|0;return(s==="x"?n:n&3|8).toString(16)}),M=s=>s instanceof Object&&"parseAsync"in s&&typeof s.parseAsync=="function",U=s=>s instanceof Object&&"errors"in s,Z=({isUpdatingFieldsValueOnError:s=!0,trackValidationHistory:n=!1,valuesFromFieldsToStore:a,valuesFromStoreToFields:y,validationHandler:c,...l})=>{if(!l.initValues||typeof l.initValues!="object")throw new Error("");let F=typeof l.baseId=="boolean"?j():l.baseId?`${l.baseId}-`:"",g={},S={fieldsNames:Object.keys(l.initValues),formId:`${F}form`},h=0,k={},E,D,x={submit:!0},w=!1,P;for(let o of S.fieldsNames){let v=c?.[o];if(D={handler:v?M(v)?e=>v.parse(e):v:void 0,failedAttempts:0,passedAttempts:0,events:{blur:{failedAttempts:0,passedAttempts:0,isActive:!1},change:{failedAttempts:0,passedAttempts:0,isActive:!1},mount:{failedAttempts:0,passedAttempts:0,isActive:!1},submit:{failedAttempts:0,passedAttempts:0,isActive:!1}}},E=l.initValues[o],l.validationEvents&&(w=!0,x={...x,...l.validationEvents}),k[o]={value:E,isUpdatingValueOnError:s,valueFromFieldToStore:a?.[o]?a[o]:void 0,valueFromStoreToField:y?.[o]?y[o]:void 0},w)for(P in x)D.events[P].isActive=!!typeof x[P];k[o]={...k[o],errors:null,isDirty:!1,metadata:{id:`${F}field-${String(o)}`,name:o,initialValue:k[o].value},validation:D}}return T((o,v)=>({fields:k,errors:g,metadata:S,submitCounter:h,isTrackingValidationHistory:n,validations:{history:[]},utils:{handleOnInputChange:(e,i)=>{let r=v(),t=r.utils.handleFieldValidation({name:e,value:i,validationEvent:"change"});r.utils.setFieldValue(e,t)},errorFormatter:e=>U(e)?e.format()._errors:e instanceof Error?[e.message]:["Something went wrong!"],reInitFieldsValues:()=>o(e=>{let i=e.metadata.fieldsNames,r=e.fields,t;for(t of i)r[t]={...r[t],value:r[t].metadata.initialValue};return{fields:r}}),setFieldValue:(e,i)=>o(r=>({fields:{...r.fields,[e]:{...r.fields[e],value:typeof i=="function"?i(r.fields[e].value):i}}})),setFieldErrors:e=>o(i=>{let r=!!e.errors,t=i.fields[e.name];return t={...t,isDirty:r,errors:e.errors,validation:{...t.validation,events:{...t.validation.events,[e.validationEvent]:{...t.validation.events[e.validationEvent],failedAttempts:r?t.validation.events[e.validationEvent].failedAttempts:t.validation.events[e.validationEvent].failedAttempts+1,passedAttempts:r?t.validation.events[e.validationEvent].passedAttempts:t.validation.events[e.validationEvent].passedAttempts+1}}}},{fields:{...i.fields,[e.name]:t},errors:g}}),createValidationHistoryRecord:({fields:e,validationEvent:i,validationEventPhase:r,validationEventState:t})=>{let f=[];r==="start"&&f.push(`Starting the validation for fields: [${Object.keys(e).join(", ")}]`),r==="end"&&f.push(`Ending the validation for fields: [${Object.keys(e).join(", ")}]`),f.push(`Validation ${t[0].toUpperCase()+t.slice(1)}!`),e.forEach(m=>{f.push(`Field: ${String(m.metadata.name)}, Failed Attempts: ${m.validation.events[i].failedAttempts}, Passed Attempt: ${m.validation.events[i].passedAttempts}`)})},handleFieldValidation:({name:e,validationEvent:i,value:r})=>{let t=v(),f=typeof r=="function"?r(t.fields[e].value):r;if(!t.fields[e].validation.events[i].isActive)return f;let m=t.fields[e].validation.handler;if(!m)return f;let b=t.fields[e].valueFromFieldToStore,u=b?b(f):f,d=t.fields[e].isUpdatingValueOnError,V=p=>(t.utils.setFieldErrors({name:e,errors:t.utils.errorFormatter(p,i),validationEvent:i}),d?u:t.fields[e].value);if(t.isTrackingValidationHistory)try{t.utils.createValidationHistoryRecord({fields:[t.fields[e]],validationEvent:i,validationEventPhase:"start",validationEventState:"processing"}),u=m(u,i),t.fields[e].isDirty&&t.utils.setFieldErrors({name:e,errors:null,validationEvent:i}),t.utils.createValidationHistoryRecord({fields:[t.fields[e]],validationEvent:i,validationEventPhase:"end",validationEventState:"passed"})}catch(p){u=V(p),t.utils.createValidationHistoryRecord({fields:[t.fields[e]],validationEvent:i,validationEventPhase:"end",validationEventState:"failed"})}else try{u=m(u,i),t.fields[e].isDirty&&t.utils.setFieldErrors({name:e,errors:null,validationEvent:i})}catch(p){u=V(p)}return u},handlePreSubmit:e=>i=>{if(i.preventDefault(),!e)return;let r=v(),t=r.fields,f={},m={},b={},u=!1,d;for(d in t)try{let p=t[d].validation.handler;t[d].validation.events.submit.isActive&&typeof p=="function"&&(m[d]=p(t[d].value,"submit")),f[d]=t[d].value,b[d]={name:d,errors:null,validationEvent:"submit"}}catch(p){b[d]={name:d,errors:r.utils.errorFormatter(p,"submit"),validationEvent:"submit"},u=!0}let V;for(V in b)r.utils.setFieldErrors(b[V]);u||e(i,{values:f,validatedValues:m,hasError:u,errors:b})}}}))},z=s=>{let n=R();return $(Z({...s,baseId:s.baseId||n})).current};export{Z as handleCreateFormStore,C as inputDateHelpers,z as useCreateFormStore};
//# sourceMappingURL=index.mjs.map