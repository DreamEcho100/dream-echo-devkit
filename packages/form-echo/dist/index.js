"use strict";var D=Object.defineProperty;var $=Object.getOwnPropertyDescriptor;var C=Object.getOwnPropertyNames;var j=Object.prototype.hasOwnProperty;var U=(s,o)=>{for(var a in o)D(s,a,{get:o[a],enumerable:!0})},M=(s,o,a,u)=>{if(o&&typeof o=="object"||typeof o=="function")for(let n of C(o))!j.call(s,n)&&n!==a&&D(s,n,{get:()=>o[n],enumerable:!(u=$(o,n))||u.enumerable});return s};var Z=s=>M(D({},"__esModule",{value:!0}),s);var B={};U(B,{createFormStore:()=>z,inputDateHelpers:()=>N,useFormStore:()=>q});module.exports=Z(B);function R(s,o){let a="";switch(o){case"date":a=s.toISOString().slice(0,10);break;case"time":a=s.toTimeString().slice(0,8);break;case"datetime-local":a=s.toISOString().slice(0,16),a=a.replace("T"," ");break;case"week":let u=s.getFullYear(),n=H(s);a=`${u}-W${n.toString().length<2?"0"+n.toString():n.toString()}`;break;case"month":a=s.toISOString().slice(0,7);break;default:break}return a}function K(s,o){let a;switch(o){case"date":a=new Date(s);break;case"time":let[u,n,c]=s.toString().split(":");a=new Date,a.setHours(Number(u)),a.setMinutes(Number(n)),a.setSeconds(Number(c));break;case"datetime-local":a=new Date(s.toString().replace(" ","T"));break;case"week":let[y,x]=s.toString().split("-W"),g=Number(y),h=Number(x);a=w(g,h);break;case"month":a=new Date(s+"-01");break;default:a=new Date;break}return a}function H(s){let o=new Date(s.getFullYear(),0,1),a=(s.valueOf()-o.valueOf())/(1e3*60*60*24);return Math.floor(a/7)+1}function w(s,o){let a=new Date(s,0,1),u=(8-a.getDay())%7,n=new Date(a);n.setDate(a.getDate()+u);let c=(o-1)*7,y=new Date(n);return y.setDate(n.getDate()+c),y}var W={formatDate:R,parseDate:K,getWeekNumber:H,getFirstDateOfWeek:w},N=W;var T=require("zustand/react"),O=require("zustand/vanilla"),Y=()=>"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,s=>{let o=Math.random()*16|0;return(s==="x"?o:o&3|8).toString(16)}),G=s=>s instanceof Object&&"parseAsync"in s&&typeof s.parseAsync=="function",_=s=>s instanceof Object&&"errors"in s,z=({isUpdatingFieldsValueOnError:s=!0,trackValidationHistory:o=!1,valuesFromFieldsToStore:a,valuesFromStoreToFields:u,validationHandler:n,...c})=>{let y=typeof c.baseId=="boolean"?Y():c.baseId?`${c.baseId}-`:"",x={},g={fieldsNames:Object.keys(c.initValues),formId:`${y}form`},h=0,V={},P,k,S={submit:!0},E=!1,A;for(let l of g.fieldsNames){let F=n?.[l];if(k={handler:G(F)?e=>F.parse(e):F,failedAttempts:0,passedAttempts:0,events:{blur:{failedAttempts:0,passedAttempts:0,isActive:!1},change:{failedAttempts:0,passedAttempts:0,isActive:!1},mount:{failedAttempts:0,passedAttempts:0,isActive:!1},submit:{failedAttempts:0,passedAttempts:0,isActive:!1}}},P=c.initValues[l],c.validationEvents&&(E=!0,S={...S,...c.validationEvents}),V[l]={value:P,isUpdatingValueOnError:s,valueFromFieldToStore:a?.[l]?a[l]:void 0,valueFromStoreToField:u?.[l]?u[l]:void 0},E)for(A in S)k.events[A].isActive=!!typeof S[A];V[l]={...V[l],errors:null,isDirty:!1,metadata:{id:`${y}field-${String(l)}`,name:l,initialValue:V[l].value},validation:k}}return(0,O.createStore)((l,F)=>({fields:V,errors:x,metadata:g,submitCounter:h,isTrackingValidationHistory:o,validations:{handler:{},history:[]},utils:{handleOnInputChange:(e,i)=>{let r=F(),t=r.utils.handleFieldValidation({name:e,value:i,validationEvent:"change"});r.utils.setFieldValue(e,t)},errorFormatter:e=>_(e)?e.format()._errors:e instanceof Error?[e.message]:["Something went wrong!"],reInitFieldsValues:()=>l(e=>{let i=e.metadata.fieldsNames,r=e.fields,t;for(t of i)r[t]={...r[t],value:r[t].metadata.initialValue};return{fields:r}}),setFieldValue:(e,i)=>l(r=>({fields:{...r.fields,[e]:{...r.fields[e],value:typeof i=="function"?i(r.fields[e].value):i}}})),setFieldErrors:e=>l(i=>{let r=!!e.errors,t=i.fields[e.name];return t={...t,isDirty:r,errors:e.errors,validation:{...t.validation,events:{...t.validation.events,[e.validationEvent]:{...t.validation.events[e.validationEvent],failedAttempts:r?t.validation.events[e.validationEvent].failedAttempts:t.validation.events[e.validationEvent].failedAttempts+1,passedAttempts:r?t.validation.events[e.validationEvent].passedAttempts:t.validation.events[e.validationEvent].passedAttempts+1}}}},{fields:{...i.fields,[e.name]:t},errors:x}}),createValidationHistoryRecord:({fields:e,validationEvent:i,validationEventPhase:r,validationEventState:t})=>{let p=[];r==="start"&&p.push(`Starting the validation for fields: [${Object.keys(e).join(", ")}]`),r==="end"&&p.push(`Ending the validation for fields: [${Object.keys(e).join(", ")}]`),p.push(`Validation ${t[0].toUpperCase()+t.slice(1)}!`),e.forEach(m=>{p.push(`Field: ${String(m.metadata.name)}, Failed Attempts: ${m.validation.events[i].failedAttempts}, Passed Attempt: ${m.validation.events[i].passedAttempts}`)})},handleFieldValidation:({name:e,validationEvent:i,value:r})=>{let t=F();if(!t.fields[e].validation.events[i].isActive)return r;let p=t.fields[e].validation.handler||t.validations.handler[e];if(!p)return r;let m=t.fields[e].valueFromFieldToStore,f=m?m(r):r,b=t.fields[e].isUpdatingValueOnError,d=v=>(t.utils.setFieldErrors({name:e,errors:t.utils.errorFormatter(v,i),validationEvent:i}),b?f:t.fields[e].value);if(t.isTrackingValidationHistory)try{t.utils.createValidationHistoryRecord({fields:[t.fields[e]],validationEvent:i,validationEventPhase:"start",validationEventState:"processing"}),f=p(f,i),t.fields[e].isDirty&&t.utils.setFieldErrors({name:e,errors:null,validationEvent:i}),t.utils.createValidationHistoryRecord({fields:[t.fields[e]],validationEvent:i,validationEventPhase:"end",validationEventState:"passed"})}catch(v){f=d(v),t.utils.createValidationHistoryRecord({fields:[t.fields[e]],validationEvent:i,validationEventPhase:"end",validationEventState:"failed"})}else try{f=p(f,i),t.fields[e].isDirty&&t.utils.setFieldErrors({name:e,errors:null,validationEvent:i})}catch(v){f=d(v)}return f},handlePreSubmit:e=>i=>{if(i.preventDefault(),!e)return;let r=F(),t=r.fields,p={},m={},f={},b=!1,d;for(d in t)try{t[d].validation.events.submit.isActive&&t[d].validation.handler&&(m[d]=t[d].validation.handler(t[d].value,"submit")),p[d]=t[d].value,f[d]={name:d,errors:null,validationEvent:"submit"}}catch(I){f[d]={name:d,errors:r.utils.errorFormatter(I,"submit"),validationEvent:"submit"},b=!0}let v;for(v in f)r.utils.setFieldErrors(f[v]);b||e(i,{values:p,validatedValues:m,hasError:b,errors:f})}}}))},q=(s,o)=>(0,T.useStore)(s,o);0&&(module.exports={createFormStore,inputDateHelpers,useFormStore});
//# sourceMappingURL=index.js.map